continue
next
continue
@question
@question.answers
@answer
@question
redirect_to question_path(assigns(:question))
question
continue
@answer.save
@answer
@answer.user_id = current_user.id
@answer
continue
next
question.answers
user.answers
user.answer
user
question.answers
question
continue
answer
question
user
continue
question
answers[2]
answers[1]
answers[0]
answers
answer
question
question.answers[2]
question.answers[1]
question.answers[0]
question.answer[0]
question
continue
@question
@question.user = current_user
@question
current_user
exit
current_user.private_methods
current_user.public_methods
current_user.methods
current_user.method
current_user.methods.grep("auth")
current_user
exit
User.methods.grep("auth")
User.methods
current_user.methods.grep("auth")
current_user.methods
current_user.class
current_user.class_of?
current_user
continue
@user.questions
@user
continue
let(:question) { create(:question, user: @user) } 
@user.questions.count
@user.questions
@user.question
@user
continue
@user.questions.count
question.size
question.count
question.id
question.destroy!
question.destroy
question.id
question
question.destroy
question
@question
question
@user.questions.count
@user.questions.size
@user.questions
question
@question
quetion
@user
user
continue
@question
question
user
@user
continue
next
current_user && current_user.id == @question.user_id
current_user.id == @question.user_id
@question.user_id
@question.id
@question
question
current_user.id
current_user
c
next
contimue
current_user.id
current_user
user
